name: Maven Build, Publish and Release

on:
  push:
    branches: [ master ]

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Для работы с тегами

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          server-id: github
          settings-path: ${{ github.workspace }}

      - name: Get version
        id: version
        run: |
          VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout | sed 's/-SNAPSHOT//')
          echo "RELEASE_VERSION=$VERSION" >> $GITHUB_ENV
          echo "Detected version: $VERSION"

      - name: Build and deploy
        run: |
          mvn -B clean package
          mvn -B deploy -s $GITHUB_WORKSPACE/settings.xml
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Create Release
        id: create-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          tag_name: "v${{ env.RELEASE_VERSION }}"
          release_name: "Release v${{ env.RELEASE_VERSION }}"
          body: "Automatic release"
          draft: false
          prerelease: false

      - name: Upload JAR to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: target/regions-${{ env.RELEASE_VERSION }}.jar
          asset_name: regions-${{ env.RELEASE_VERSION }}.jar
          asset_content_type: application/java-archive

      - name: Create Git tag
        if: success()
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git tag -a "v${{ env.RELEASE_VERSION }}" -m "Release ${{ env.RELEASE_VERSION }}"
          git push origin "v${{ env.RELEASE_VERSION }}"